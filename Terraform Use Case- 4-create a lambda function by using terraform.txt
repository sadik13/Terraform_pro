Use Case- 4:-(terraform archive provider is used to zip the file)
 
create a lambda function by using terraform

==============hello_lambda.py===============

import os

def lambda_handler(event, context):
    return "{} from Lambda!".format(os.environ['greeting'])
	
=========================================================

==================main.tf===============================
# Specify the provider and access details
provider "aws" {
  region = "${var.aws_region}"
  access_key  = var.access_key
  secret_key  = var.secret_key
}


provider "archive" {}

data "archive_file" "zip" {
  type        = "zip"
  source_file = "hello_lambda.py"
  output_path = "hello_lambda.zip" #it is created automatically in the same path location
}

data "aws_iam_policy_document" "policy" {
  statement {
    sid    = ""
    effect = "Allow"

    principals {
      identifiers = ["lambda.amazonaws.com"]
      type        = "Service"
    }

    actions = ["sts:AssumeRole"]
  }
}

resource "aws_iam_role" "iam_for_lambda" {
  name               = "iam_for_lambda"
  assume_role_policy = "${data.aws_iam_policy_document.policy.json}"
}

resource "aws_lambda_function" "lambda" {
  function_name = "hello_lambda"

  filename         = "${data.archive_file.zip.output_path}"
  source_code_hash = "${data.archive_file.zip.output_base64sha256}"

  role    = "${aws_iam_role.iam_for_lambda.arn}"
  handler = "hello_lambda.lambda_handler"
  runtime = "python3.6"

  environment {
    variables = {
      greeting = "Hello world from terraform"
    }
  }
}
============================================================

==============variables.tf=======================
variable "aws_region" {
  
  default     = "us-east-1"
}

variable access_key {
type = string
}

variable secret_key {
type = string
}
==========================================

===============outputs.tf================

output "lambda" {
  value = "${aws_lambda_function.lambda.qualified_arn}"
}
=====================================


